<?xml version="1.0"?>
<!--
(c) 2005-2015 Copyright, Real-Time Innovations.  All rights reserved.
No duplications, whole or partial, manual or electronic, may be made
without express written permission.  Any such copies, or revisions thereof,
must display this notice unaltered.
This code contains trade secrets of Real-Time Innovations, Inc.
 -->

<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="http://community.rti.com/schema/5.1.0/rti_dds_profiles.xsd" version="5.1.0">

    <!-- Qos Library -->
	<qos_library name="QosLibrary">

	</qos_library>

    <!-- types -->
    <types>
        <struct name="Message">
          <member name="NumberMember" type="long" key="true"/>
          <member name="StingMember" stringMaxLength="128" type="string"/>
        </struct>
        <struct name="cameraMSG">
            <member name="camera" stringMaxLength="128" type="string"/>
        </struct>
        <struct name="temperatureMSG">
            <member name="sensorID" type="long" key="true"/>
            <member name="temp" type="long"/>
        </struct>
        <struct name="startStopMSG">
            <member name="status" stringMaxLength="128" type="string"/>
        </struct>
        <struct name="actuatorMSG">
            <member name="actuatorID" type="long" key="true"/>
            <member name="status" stringMaxLength="128" type="string"/>
        </struct>

    </types>




    <!-- Domain Library -->
	<!-- this is related to the domain 0 that we set on shape deme-->
    <domain_library name="MyDomainLibrary">
        <domain name="MyDomain" domain_id="0">
    <!-- topics definition  -->
            <register_type name="cameraMSG"  type_ref="cameraMSG" />
            <topic name="time" register_type_ref="cameraMSG"/>

            <register_type name="temperatureMSG"  type_ref="temperatureMSG" />
           <topic name="temp" register_type_ref="temperatureMSG"/>

            <register_type name="startStopMSG"  type_ref="startStopMSG" />
           <topic name="startStopStatus" register_type_ref="startStopMSG"/>

            <register_type name="actuatorMSG"  type_ref="actuatorMSG" />
           <topic name="actuatorStatus" register_type_ref="actuatorMSG"/>

        </domain>
    </domain_library>


    <!-- Participant library -->
    <domain_participant_library name="MyParticipantLibrary">
        <domain_participant name="Camera" domain_ref="MyDomainLibrary::MyDomain">
            <publisher name="Camera">
                <data_writer name="time_writer" topic_ref="time">
                    <datawriter_qos>
                        <history>  <!--  keeping the last data of the camera  -->
                            <kind>KEEP_LAST_HISTORY_QOS</kind>
                            <depth>1</depth>
                        </history>
                        <reliability>   <!--  "no need to ensure the arrival of each message"  -->
                            <kind>BEST_EFFORT_RELIABILITY_QOS</kind>
                        </reliability>
                        <durability>   <!--  keep the latest data  -->
                            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
                        </durability>
                    </datawriter_qos>
                </data_writer>
            </publisher>
        </domain_participant>


        <domain_participant name="TempSensor1" domain_ref="MyDomainLibrary::MyDomain">
            <publisher name="TempSensor1">
                <data_writer name="temp_writer" topic_ref="temp">
                    <datawriter_qos>
                        <history>    <!--  need to keep extreme measurements so all data needed  -->
                            <kind>KEEP_ALL_HISTORY_QOS</kind>
                        </history>
                        <reliability>   <!--  need to keep data integrity  -->
                            <kind>RELIABLE_RELIABILITY_QOS</kind>
                        </reliability>
                        <durability>   <!--  show data even if the dashboard was initialized after the sensors sent their last status messages  -->
                            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
                        </durability>
                    </datawriter_qos>
                </data_writer>
            </publisher>
        </domain_participant>


        <domain_participant name="TempSensor2" domain_ref="MyDomainLibrary::MyDomain">
            <publisher name="TempSensor2">
                <data_writer name="temp_writer" topic_ref="temp">
                    <datawriter_qos>
                        <history>   <!--  need to keep extreme measurements so all data needed  -->
                            <kind>KEEP_ALL_HISTORY_QOS</kind>
                        </history>
                        <reliability>   <!--  need to keep data integrity  -->
                            <kind>RELIABLE_RELIABILITY_QOS</kind>
                        </reliability>
                        <durability>   <!--  show data even if the dashboard was initialized after the sensors sent their last status messages  -->
                            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
                        </durability>
                    </datawriter_qos>
                </data_writer>
            </publisher>
        </domain_participant>


        <domain_participant name="StartStopButton" domain_ref="MyDomainLibrary::MyDomain">
            <publisher name="StartStopButton">
                <data_writer name="button_writer" topic_ref="startStopStatus">
                    <datawriter_qos>
                        <history>   <!--  need data of the last state  -->
                            <kind>KEEP_LAST_HISTORY_QOS</kind>
                            <depth>10</depth>
                        </history>
                        <reliability>   <!--  data need to be correct  -->
                            <kind>RELIABLE_RELIABILITY_QOS</kind>
                        </reliability>
                        <durability>   <!--  data need to be stored even when other components not working  -->
                            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
                        </durability>
                    </datawriter_qos>
                </data_writer>
            </publisher>
        </domain_participant>


        <domain_participant name="Dashboard" domain_ref="MyDomainLibrary::MyDomain">
            <subscriber name="Dashboard">
                <data_reader name="time_reader" topic_ref="time">
                    <datareader_qos>
                        <history>   <!--  "no need for the previous messages here"  -->
                            <kind>KEEP_LAST_HISTORY_QOS</kind>
                            <depth>1</depth>
                        </history>
                        <reliability>   <!--  "no need to ensure the arrival of each message"  -->
                            <kind>BEST_EFFORT_RELIABILITY_QOS</kind>
                        </reliability>
                        <durability>   <!--  having the last state stored  -->
                            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
                        </durability>
                    </datareader_qos>
                </data_reader>
                <data_reader name="temp_reader" topic_ref="temp">
                    <datareader_qos>
                        <history>  <!--  get the last 10 extreme temperatures from all data  -->
                            <kind>KEEP_ALL_HISTORY_QOS</kind>
                        </history>
                        <reliability>   <!--  all the data need to be provided  -->
                            <kind>RELIABLE_RELIABILITY_QOS</kind>
                        </reliability>
                        <durability>   <!--  "even if the dashboard was initialized after the sensors sent their last status messages"  -->
                            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
                        </durability>
                    </datareader_qos>

                </data_reader>
                 <data_reader name="status_reader" topic_ref="actuatorStatus">
                    <datareader_qos>
                        <history>   <!--  get the last 10 states of the actuator  -->
                            <kind>KEEP_LAST_HISTORY_QOS</kind>
                            <depth>10</depth>
                        </history>
                        <reliability>   <!--  all the data need to be provided  -->
                            <kind>RELIABLE_RELIABILITY_QOS</kind>
                        </reliability>
                        <durability>   <!--  "even if the dashboard was initialized after the actuators sent their last status messages"  -->
                            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
                        </durability>
                    </datareader_qos>

                </data_reader>
            </subscriber>
        </domain_participant>


        <domain_participant name="Actuator1" domain_ref="MyDomainLibrary::MyDomain">
            <subscriber name="subActuator1">
                <data_reader name="temp_reader" topic_ref="temp">
                    <datareader_qos>
                        <history>   <!--  need to have the latest read  -->
                            <kind>KEEP_LAST_HISTORY_QOS</kind>
                            <depth>1</depth>
                        </history>
                        <reliability>   <!--  all the data need to be provided  -->
                            <kind>RELIABLE_RELIABILITY_QOS</kind>
                        </reliability>
                        <durability>   <!--  get the latest read even after initializing  -->
                            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
                        </durability>
                    </datareader_qos>
                </data_reader>
                <data_reader name="button_reader" topic_ref="startStopStatus">
                    <datareader_qos>
                        <history>   <!--  get the last state  -->
                            <kind>KEEP_LAST_HISTORY_QOS</kind>
                            <depth>1</depth>
                        </history>
                        <reliability>   <!--  all the data need to be provided  -->
                            <kind>RELIABLE_RELIABILITY_QOS</kind>
                        </reliability>
                        <durability>   <!--  get the latest read even after initializing  -->
                            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
                        </durability>
                    </datareader_qos>
                </data_reader>
            </subscriber>
            <publisher name="pubActuator1">
                <data_writer name="status_writer" topic_ref="actuatorStatus">
                    <datawriter_qos>
                        <history> <!--  keep the last 10 states  -->
                            <kind>KEEP_LAST_HISTORY_QOS</kind>
                            <depth>10</depth>
                        </history>
                        <reliability>   <!--  all the data need to be kept  -->
                            <kind>RELIABLE_RELIABILITY_QOS</kind>
                        </reliability>
                        <durability>   <!--  keep the data for further use  -->
                            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
                        </durability>
                    </datawriter_qos>
                </data_writer>
            </publisher>

        </domain_participant>

        <domain_participant name="Actuator2" domain_ref="MyDomainLibrary::MyDomain">   <!--  same as actuator 1  -->
            <subscriber name="subActuator2">
                <data_reader name="temp_reader" topic_ref="temp">
                    <datareader_qos>
                        <history>
                            <kind>KEEP_LAST_HISTORY_QOS</kind>
                            <depth>1</depth>
                        </history>
                        <reliability>
                            <kind>RELIABLE_RELIABILITY_QOS</kind>
                        </reliability>
                        <durability>
                            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
                        </durability>
                    </datareader_qos>

                </data_reader>
                <data_reader name="button_reader" topic_ref="startStopStatus">
                    <datareader_qos>
                        <history>
                            <kind>KEEP_LAST_HISTORY_QOS</kind>
                            <depth>1</depth>
                        </history>
                        <reliability>
                            <kind>RELIABLE_RELIABILITY_QOS</kind>
                        </reliability>
                        <durability>
                            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
                        </durability>

                    </datareader_qos>
                </data_reader>
            </subscriber>
            <publisher name="pubActuator2">
                <data_writer name="status_writer" topic_ref="actuatorStatus">
                    <datawriter_qos>
                        <history>
                            <kind>KEEP_LAST_HISTORY_QOS</kind>
                            <depth>10</depth>
                        </history>
                        <reliability>
                            <kind>RELIABLE_RELIABILITY_QOS</kind>
                        </reliability>
                        <durability>
                            <kind>TRANSIENT_LOCAL_DURABILITY_QOS</kind>
                        </durability>
                    </datawriter_qos>
                </data_writer>
            </publisher>

        </domain_participant>

    </domain_participant_library>
</dds>

